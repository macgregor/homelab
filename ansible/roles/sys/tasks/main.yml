---
# System User Management
# systemd-journal and adm groups give us access to logs without having to use sudo
- name: adding existing user '{{ ansible_user }}' to groups
  user:
    name: '{{ ansible_user }}'
    groups: [systemd-journal, adm, chrony, audio, video]
    append: yes

- name: Set authorized key taken from local file
  ansible.posix.authorized_key:
    user: "{{ ansible_user }}"
    state: present
    key: "{{ lookup('file', '{{ ssh_pub_key }}') }}"

# set locale/timezone
- name: Get current locale
  ansible.builtin.shell: "localectl status | head -n 1 | sed 's/System Locale: //' | tr -d '\n'"
  register: current_locale
  changed_when: false

- name: set locale
  command: localectl set-locale LANG=en_US.UTF-8
  when: current_locale.stdout != 'LANG=en_US.UTF-8'

- name: Set timezone to America/New_York
  community.general.timezone:
    name: America/New_York

# Packages
- name: Enable additional repositories
  tags: [ slow ]
  dnf:
    name:
      - "epel-release"
    update_cache: yes
    state: 'present'

- name: "Install system packages"
  tags: [ slow ]
  dnf:
    name:
      - "dnf-automatic"
      - "nfs-utils"
      - "yum-utils"
      - "iotop"
      - "sysstat"
      - "tar"
      - "unzip"
    update_cache: no
    state: 'present'

# Files
- name: ensures dirs exist
  file: 
    path: "{{ item}}"
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: "u=rwx,g=rx,o="
  loop:
    - "/home/{{ ansible_user }}/.config"
    - "/home/{{ ansible_user }}/.config/neofetch"

- name: Deploy config files, scripts, etc
  ansible.builtin.template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{ item.owner | default('root') }}"
    group: "{{ item.group | default('root') }}"
    mode: "{{ item.mode | default('0644') }}"
  loop:
    - { src: dnf-automatic.conf.j2, dest: /etc/dnf/automatic.conf }
    - { src: motd.txt, dest: /etc/motd.d/00-notes.txt }
    - { src: journald.conf.j2, dest: /etc/systemd/journald.conf }

# Raspberry Pi
- name: Deploy Boot Config
  tags: [ sys-reboot ]
  ansible.builtin.template:
    src: rpi-boot-config.txt
    dest: /boot/config.txt
    mode: '0755'
  notify: reboot

# Systemd
- name: Deploy systemd unit files
  ansible.builtin.template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{ item.owner | default('root') }}"
    group: "{{ item.group | default('root') }}"
    mode: "{{ item.mode | default('0644') }}"
  notify: reload-systemd
  loop:
    - { src: dnf-automatic-reboot.service, dest: /etc/systemd/system/dnf-automatic-reboot.service }
    - { src: dnf-automatic-reboot.timer, dest: /etc/systemd/system/dnf-automatic-reboot.timer }

- name: Manage systemd services
  tags: [ slow ]
  ansible.builtin.service:
    name: "{{ item.name }}"
    state: "{{ item.state | default('started') }}"
    enabled: "{{ item.enabled | default('true') }}"
    masked: "{{ item.masked | default('false') }}"
  loop:
    - {name: dnf-automatic-install.timer}
    - {name: dnf-automatic-reboot.timer}
    - {name: systemd-journald.service}
    - {name: firewalld.service, state: stopped, enabled: false, masked: true}
