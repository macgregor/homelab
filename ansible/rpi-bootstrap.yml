- name: "Create new system user"
  hosts: cluster
  gather_facts: yes
  become: yes
  tags: [ create_user ]
  vars:
    ansible_ssh_user: "{{ default_user }}"
    ansible_ssh_pass: "{{ default_password }}"
    ansible_become_pass: "{{ default_password }}"
  tasks:
    - name: "Add the user '{{ ansible_user }}'"
      ansible.builtin.user:
        name: "{{ ansible_user }}"
        password: "{{ ansible_user_password | password_hash('sha512') }}"
        uid: 1001
        groups: "{{ sudo_group }}"
        shell: /bin/bash
        createhome: yes

    - name: Set authorized key taken from file
      ansible.posix.authorized_key:
        user: "{{ ansible_user }}"
        state: present
        key: "{{ lookup('file', '{{ ssh_pub_key }}') }}"

    - name: "Allow {{ sudo_group }} group to have passwordless sudo"
      lineinfile:
        dest: /etc/sudoers
        state: present
        regexp: "^%{{ sudo_group }}"
        line: "%{{ sudo_group }} ALL=(ALL) NOPASSWD: ALL"
        validate: 'visudo -cf %s'

- name: "Log in as new user {{ ansible_user }} to finish setup"
  hosts: cluster
  gather_facts: false
  become: yes

  tasks:
    - name: "Remove the default user {{ default_user }} if present"
      ansible.builtin.user:
        name: "{{ default_user }}"
        state: absent
        remove: yes
        force: true

    # this returned a non-zero exit code for me, but it seemed to work...  
    - name: Expand rootfs
      ansible.builtin.command: rootfs-expand
      register: expand_rootfs
      changed_when: "'reboot required' in expand_rootfs.stdout"
      ignore_errors: true
      notify:
        - reboot