---
apiVersion: v1
kind: ConfigMap
metadata:
  name: tdarr-server-config
  namespace: media
data:
  PUID: "555"
  PGID: "321"
  UMASK: "002"
  TZ: "America/New_York"
  ffmpegPath: ""
  serverIP: 0.0.0.0
  serverPort: "8266"
  webUIPort: "8265"
  CHOWN_ON_START: false
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tdarr-server
  namespace: media
  labels:
    app.kubernetes.io/name: tdarr-server
spec:
  revisionHistoryLimit: 3
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: tdarr-server
  template:
    metadata:
      labels:
        app.kubernetes.io/name: tdarr-server
    spec:
      serviceAccountName: default
      automountServiceAccountToken: true
      dnsPolicy: ClusterFirst
      enableServiceLinks: true
      tolerations:
        - key: "CriticalAddonsOnly"
          operator: "Equal"
          value: "true"
          effect: "NoSchedule"
      containers:
        - name: tdarr
          image: "ghcr.io/haveagitgat/tdarr:2.00.21"
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              cpu: 500m
              memory: 256Mi
            limits:
              cpu: 2000m
              memory: 2048Mi
          envFrom:
            - configMapRef:
                name: tdarr-server-config
                optional: false
          volumeMounts:
            - name: config
              mountPath: /app/configs
            - name: data
              mountPath: /app/server
            - name: media
              mountPath: /media
            - name: shared
              mountPath: /shared
          ports:
            - name: http
              containerPort: 8265
              protocol: TCP
            - name: server
              containerPort: 8266
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: 8265
            initialDelaySeconds: 0
            failureThreshold: 3
            timeoutSeconds: 1
            periodSeconds: 10
          readinessProbe:
            tcpSocket:
              port: 8265
            initialDelaySeconds: 0
            failureThreshold: 3
            timeoutSeconds: 1
            periodSeconds: 10
          startupProbe:
            tcpSocket:
              port: 8265
            initialDelaySeconds: 0
            failureThreshold: 30
            timeoutSeconds: 1
            periodSeconds: 5
      volumes:
        - name: config
          persistentVolumeClaim:
            claimName: tdarr-server-config
        - name: data
          persistentVolumeClaim:
            claimName: tdarr-server-data
        - name: media
          nfs: # data folder is a mounted pre-existing NFS share, *not* a PV/PVC
            server: 192.168.1.200
            path: /volume1/Media/media
        - name: shared
          nfs: # shared folder is a mounted pre-existing NFS share, *not* a PV/PVC
            server: 192.168.1.200
            path: /volume1/Media/transcode
---